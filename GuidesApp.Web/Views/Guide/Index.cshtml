@using Humanizer
@model List<GuidesApp.Web.Models.GuideDto>
<section class="row">
    <header>Title</header>
    <a asp-action="Create" asp-controller="Guide" class="btn btn-info">New</a>
    <main class="col">
        @foreach (var guide in Model)
        {
            <div class="card mb-3">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="https://i.imgur.com/OJHNsX9.jpg" class="img-fluid rounded-start" alt="...">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h3 class="card-title">@guide.Title</h3>
                            <h5 class="small text-muted mb-3">By @guide.CreatedByDisplayName<span class="ms-3"></span>@guide.CreatedDateTime</h5>
                            <p class="card-text">@guide.Subtitle</p>
                            <p class="card-text"><small class="text-body-secondary">Last updated @guide.LastModifiedDateTime</small></p>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <div>
                            Likes 280  **** stars etc
                        </div>
                        <div>
                            @{ if (User.IsInRole(GuidesApp.Web.Utility.StaticDetails.RoleAdmin))
                                {
                                    <a class="btn btn-warning"
                                       asp-action="Edit"
                                       asp-controller="Guide"
                                       asp-route-id="@guide.GuideId">Edit</a>
                                    <button type="button"
                                            class="btn btn-danger"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal"
                                            data-bs-title="@guide.Title"
                                            data-bs-guideId="@guide.GuideId">
                                        Delete
                                    </button>
                                }
                            }
                            <button class="btn btn-primary">Read</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </main>
</section>


<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Guide</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <form asp-action="Delete" asp-controller="Guide" method="post" id="deleteForm">
                    <input type="hidden" name="GuideId" id="modalGuideId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    const deleteModal = document.getElementById('deleteModal')
    if (deleteModal) {
        deleteModal.addEventListener('show.bs.modal', event => {

            const button = event.relatedTarget

            const guideId = button.getAttribute('data-bs-guideId')
            const guideTitle = button.getAttribute('data-bs-title')
        
            const modalTitle = deleteModal.querySelector('.modal-title')
            const modalBody = deleteModal.querySelector('.modal-body')
            const modalGuideId = deleteModal.querySelector('#modalGuideId')
            modalGuideId.value = guideId
            modalTitle.textContent = `Delete Guide ID: "${guideId}"`
            modalBody.textContent = `Are you sure you want to delete the guide "${guideTitle}"?`

            const deleteForm = document.getElementById('deleteForm')
            let actionUrl = new URL(deleteForm.action)
            deleteForm.action = `${actionUrl.pathname}/${guideId}`
        })
    }
</script>
}